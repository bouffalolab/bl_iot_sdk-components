# Changes

## 2023-09-14
1. Fix the issue that connection update work is not released when upper layer does disconnection in BT_CONN_CONNECT_SCAN state.

## 2023-08-15
1. Fix the issue that att_timeout still happens while this att_req has been cancelled by upper layer.

## 2023-08-08
1. Remove compilation flags in ble_common.mk, including -Wno-unused-const-variable,-Wno-unused-but-set-variable and -Wno-format. Fix related compilation errors and warnings.

## 2023-07-26
1. Fix the problem that repeated calls to bt_conn_create_le causes subsequent connection failure.

## 2023-07-14
1. Add ble direct test mode feature.

## 2023-06-21
1. Fix an illegal memory access issue in bt_gatt_indicate().
2. Solve the problem that the next bt_gatt_discover cannot be initiated in the callback function when the first bt_gatt_discover is completed.
   
## 2023-06-16
1. Optimize error log.

## 2023-06-15
1. Add ble auto clean le key when key missing.

## 2023-06-06
1. Add the function for ble tx/rx throughput.

## 2023-05-31
1. Add an error response value in the discover function callback.

## 2023-05-24
1. Fix a crash when call bt_gatt_subscribe function in ble connected callback.

## 2023-05-10
1. Supplement EIR/AD data type definitions.
2. Add API to make upper layer can disable pair.
3. Add API to make upper layer can set preferred connection parameters If CONFIG_BT_GAP_PERIPHERAL_PREF_PARAMS is enabled.

## 2023-04-20
1. Fix an error that ble may crash when disable / re-enable again in some scenario.

## 2023-04-19
1. Add API to get ble tx power for bl702L/bl702/bl602.
2. Static random address can be set to a new value after bt is disabled.
 
## 2023-04-17
1. Fix disconnect error when call bt_conn_disconnect().
   Issue: when bt_conn_disconnect()->bt_hci_disconnect()->bt_hci_cmd_send_sync() is run, yeild will be called and current task is pending. Once disconnect done, conn->state will be changed to BT_CONN_DISCONNECTED and current task will be restored. Now if bt_conn_set_state() is called with parameter BT_CONN_DISCONNECT. conn->ref will be messed.
2. Fix crash when call bt_le_scan_stop().
   Issue: scan_dev_found_cb will be set to NULL in bt_le_scan_stop(). If bt_le_scan_stop() is called but scan has not been stopped immediately, le_adv_report() will call scan_dev_found_cb which leads to crash.
